[TEMPLATE]

explanation = "apears above the signature, if enabled in the inspector (off by default)"
documentation = "appears in the info box when the method is selected"
with_type_hint = "this is the function pasted when type_hints are enabled in the editor_settings"
without_type_hint = "this is the function pasted when type_hints are disabled in the editor_settings"

[_ready]

explanation = "# Called when the node is \"ready\", i.e. when the node and its children have entered the scene tree."
documentation = "Called when the node is \"ready\", i.e. when both the node and its children have entered the scene tree. If the node has children, their _ready() callbacks get triggered first, and the parent node will receive the ready notification afterwards.

Corresponds to the NOTIFICATION_READY notification in Object._notification(). See also the onready keyword for variables.

Usually used for initialization. For even earlier initialization, Object._init() may be used. See also _enter_tree().

Note: _ready() may be called only once for each node. After removing a node from the scene tree and adding again, _ready will not be called for the second time. This can be bypassed with requesting another call with request_ready(), which may be called anywhere before adding the node again."
with_type_hint = "func _ready() -> void:
	pass"
without_type_hint = "func _ready():
	pass"

[_enter_tree]

explanation = "# Called when the node enters the SceneTree (e.g. upon instancing, scene changing, or after calling add_child() in a script)."
documentation = "Called when the node enters the SceneTree (e.g. upon instancing, scene changing, or after calling add_child() in a script). If the node has children, its _enter_tree() callback will be called first, and then that of the children.

Corresponds to the NOTIFICATION_ENTER_TREE notification in Object._notification()."
with_type_hint = "func _enter_tree() -> void:
	pass"
without_type_hint = "func _enter_tree():
	pass"
